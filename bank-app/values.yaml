# Global values (if any)
global:
  domain: bankapp.local # Example domain for ingress
  spring_config_import: "file:/app/config/application.yml"


accounts-service:
  replicaCount: 1
  image:
    # --- REVERTED TO LOCAL REPO ---
    repository: accounts-service
    tag: "1.0.0"
    pullPolicy: IfNotPresent
    # -----------------------------
  imagePullSecrets:
    - name: ghcr-registry
  service:
    type: ClusterIP
    port: 8080
  config:
    service_db_user: accounts_user
    oauth2:
      - client_id: notifications-client
        scope: resource.readwrite
        secret_name: OAUTH2_CLIENT_SECRET_NOTIFICATIONS
  # Configuration for the accountsDatabase (PostgreSQL dependency)
  accountsDatabase:
    enabled: true
    fullnameOverride: accounts-postgresql
    # Override values from the official postgresql chart
    auth:
      database: app_db
      username: accounts_user
    primary:
      persistence:
        enabled: true
        size: 1Gi # Small size for example
  gateway:
    gatewayName: gateway
    gatewayNamespace: nginx-gateway
    routes:
      - name: accounts-service-route
        path: /accounts-service

cash-service:
  replicaCount: 1
  image:
    # --- REVERTED TO LOCAL REPO ---
    repository: cash-service # Removed registry prefix
    tag: "1.0.0"
    pullPolicy: IfNotPresent # Use IfNotPresent for local images
    # -----------------------------
  imagePullSecrets:
    - name: ghcr-registry
  service:
    type: ClusterIP
    port: 8081
  config:
    service_db_user: cash_user
    oauth2:
      - client_id: notifications-client
        scope: resource.readwrite
        secret_name: OAUTH2_CLIENT_SECRET_NOTIFICATIONS
      - client_id: accounts-client
        scope: resource.readwrite
        secret_name: OAUTH2_CLIENT_SECRET_ACCOUNTS
      - client_id: blocker-client
        scope: resource.readwrite
        secret_name: OAUTH2_CLIENT_SECRET_BLOCKER
  # Configuration for the cashDatabase (PostgreSQL dependency)
  cashDatabase:
    enabled: true
    # Override values from the official postgresql chart
    fullnameOverride: cash-postgresql
    auth:
      database: app_db
      username: cash_user
    primary:
      persistence:
        enabled: true
        size: 1Gi # Small size for example
  gateway:
    gatewayName: gateway
    gatewayNamespace: nginx-gateway
    routes:
      - name: cash-service-route
        path: /cash-service

transfer-service:
  replicaCount: 1
  image:
    # --- REVERTED TO LOCAL REPO ---
    repository: transfer-service # Removed registry prefix
    tag: "1.0.0"
    pullPolicy: IfNotPresent # Use IfNotPresent for local images
    # -----------------------------
  imagePullSecrets:
    - name: ghcr-registry
  service:
    type: ClusterIP
    port: 8082
  config:
    service_db_user: transfer_user
    oauth2:
      - client_id: notifications-client
        scope: resource.readwrite
        secret_name: OAUTH2_CLIENT_SECRET_NOTIFICATIONS
      - client_id: accounts-client
        scope: resource.readwrite
        secret_name: OAUTH2_CLIENT_SECRET_ACCOUNTS
      - client_id: blocker-client
        scope: resource.readwrite
        secret_name: OAUTH2_CLIENT_SECRET_BLOCKER
      - client_id: exchange-client
        scope: resource.readwrite
        secret_name: OAUTH2_CLIENT_SECRET_EXCHANGE
  # Configuration for the transferDatabase (PostgreSQL dependency)
  transferDatabase:
    enabled: true
    # Override values from the official postgresql chart
    fullnameOverride: transfer-postgresql
    auth:
      database: app_db
      username: transfer_user
    primary:
      persistence:
        enabled: true
        size: 1Gi # Small size for example
  gateway:
    gatewayName: gateway
    gatewayNamespace: nginx-gateway
    routes:
      - name: transfer-service-route
        path: /transfer-service


blocker-service:
  replicaCount: 1
  image:
    # --- REVERTED TO LOCAL REPO ---
    repository: blocker-service # Removed registry prefix
    tag: "1.0.0"
    pullPolicy: IfNotPresent # Use IfNotPresent for local images
    # -----------------------------
  imagePullSecrets:
    - name: ghcr-registry
  service:
    type: ClusterIP
    port: 8083
  gateway:
    gatewayName: gateway
    gatewayNamespace: nginx-gateway
    routes:
      - name: blocker-service-route
        path: /blocker-service

exchange-service:
  replicaCount: 1
  image:
    # --- REVERTED TO LOCAL REPO ---
    repository: exchange-service # Removed registry prefix
    tag: "1.0.0"
    pullPolicy: IfNotPresent # Use IfNotPresent for local images
    # -----------------------------
  imagePullSecrets:
    - name: ghcr-registry
  service:
    type: ClusterIP
    port: 8084
  config:
    service_db_user: exchange_user
  # Configuration for the exchangeDatabase (PostgreSQL dependency)
  exchangeDatabase:
    enabled: true
    # Override values from the official postgresql chart
    fullnameOverride: exchange-postgresql
    auth:
      database: app_db
      username: exchange_user
    primary:
      persistence:
        enabled: true
        size: 1Gi # Small size for example
  gateway:
    gatewayName: gateway
    gatewayNamespace: nginx-gateway
    routes:
      - name: exchange-service-route
        path: /exchange-service

exchange-generator:
  replicaCount: 1
  image:
    # --- REVERTED TO LOCAL REPO ---
    repository: exchange-generator # Removed registry prefix
    tag: "1.0.0"
    pullPolicy: IfNotPresent # Use IfNotPresent for local images
    # -----------------------------
  imagePullSecrets:
    - name: ghcr-registry
  service:
    type: ClusterIP
    port: 8085
  config:
    oauth2:
      - client_id: exchange-client
        scope: resource.readwrite
        secret_name: OAUTH2_CLIENT_SECRET_EXCHANGE

notifications-service:
  replicaCount: 1
  image:
    # --- REVERTED TO LOCAL REPO ---
    repository: notifications-service # Removed registry prefix
    tag: "1.0.0"
    pullPolicy: IfNotPresent # Use IfNotPresent for local images
    # -----------------------------
  imagePullSecrets:
    - name: ghcr-registry
  service:
    type: ClusterIP
    port: 8086
  config:
    service_db_user: notifications_user
  # Configuration for the notificationsDatabase (PostgreSQL dependency)
  notificationsDatabase:
    enabled: true
    # Override values from the official postgresql chart
    fullnameOverride: notifications-postgresql
    auth:
      database: app_db
      username: notifications_user
    primary:
      persistence:
        enabled: true
        size: 1Gi # Small size for example
  gateway:
    gatewayName: gateway
    gatewayNamespace: nginx-gateway
    routes:
      - name: notifications-service-route
        path: /notifications-service

front-ui:
  replicaCount: 1
  image:
    # --- REVERTED TO LOCAL REPO ---
    repository: front-ui # Removed registry prefix
    tag: "1.0.0"
    pullPolicy: IfNotPresent # Use IfNotPresent for local images
    # -----------------------------
  imagePullSecrets:
    - name: ghcr-registry
  service:
    type: ClusterIP
    port: 8087
  config:
    oauth2:
      - client_id: accounts-client
        scope: resource.readwrite
        secret_name: OAUTH2_CLIENT_SECRET_ACCOUNTS
      - client_id: cash-client
        scope: resource.readwrite
        secret_name: OAUTH2_CLIENT_SECRET_CASH
      - client_id: transfer-client
        scope: resource.readwrite
        secret_name: OAUTH2_CLIENT_SECRET_TRANSFER
  gateway:
    gatewayName: gateway
    gatewayNamespace: nginx-gateway
    routes:
      - name: front-ui-route
        path: /bank-app

keycloak:
  enabled: false
gateway:
  enabled: false