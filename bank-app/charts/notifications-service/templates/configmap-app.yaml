apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "notifications-service.fullname" . }}-config
data:
  application.yml: |
    management:
      endpoints:
        web:
          exposure:
            include: health,info,prometheus,refresh
      endpoint:
        health:
          probes:
            enabled: true
          show-details: always
      health:
        livenessState:
          enabled: true
        readinessState:
          enabled: true
      zipkin:
        tracing:
          endpoint: ${ZIPKIN_URL}/api/v2/spans
        sampling:
          probability: 1
    spring:
      security:
        oauth2:
          resourceserver:
            jwt:
              issuer-uri: ${KEYCLOAK_ISSUER_URL}
      kafka:
        bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
        consumer:
          key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
          group-id: notifications-service-group
          auto-offset-reset: latest
          enable-auto-commit: false
          properties.spring.json.trusted.packages: ru.strbnm.kafka.*
      r2dbc:
        url: r2dbc:postgresql://${SERVICE_DB_HOST}:5432/app_db
        username: ${SERVICE_DB_USER}
        password: ${SERVICE_DB_PASSWORD}
        pool:
          enabled: true                               # Включение пула соединений
          initial-size: 10                            # Начальное количество соединений в пуле
          max-size: 50                                # Максимальное количество соединений
          max-idle-time: 30s                          # Время бездействия соединения перед закрытием
          max-life-time: 10m                          # Максимальное время жизни соединения
          validation-query: SELECT 1                  # SQL-запрос для проверки работоспособности соединения
      liquibase:
        enabled: true
        url: jdbc:postgresql://${SERVICE_DB_HOST}:5432/app_db
        user: ${SERVICE_DB_USER}
        password: ${SERVICE_DB_PASSWORD}
        change-log: classpath:db/changelog/db.changelog-master.xml
        contexts: default
      sql:
        init:
          mode: never
    logging:
      level:
        org.springframework.web.reactive.function.client.ExchangeFunctions: DEBUG  # исходящие WebClient-запросы
        org.springframework.web.server.adapter.HttpWebHandlerAdapter: DEBUG       # входящие HTTP-запросы
        org.springframework.web.filter.reactive.ServerHttpObservationFilter: TRACE # Spring Boot 3+ - WebFlux Observability
        io.r2dbc.proxy: DEBUG      # Основное логирование SQL через r2dbc-proxy
        io.r2dbc.proxy.listener.QueryExecutionInfoListener: TRACE