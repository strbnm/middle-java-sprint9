x-common-env: &common-env
    EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/
    KEYCLOAK_ISSUER_URL: http://keycloak:8080/realms/bank-app
    CONFIG_SERVER_HOST: ${CONFIG_SERVER_HOST:-spring-cloud-config-server}
    CONFIG_SERVER_PORT: ${CONFIG_SERVER_PORT:-8888}
    RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
    RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}

services:
  spring-cloud-config-server:
    build:
      context: ./config-server
    image: config_server:1.0.0
    container_name: ${CONFIG_SERVER_HOST:-spring-cloud-config-server}
    hostname: ${CONFIG_SERVER_HOST:-spring-cloud-config-server}
    environment:
      CONFIG_SERVER_PORT: ${CONFIG_SERVER_PORT:-8888}
    expose:
      - "${CONFIG_SERVER_PORT:-8888}"
    ports:
      - "${CONFIG_SERVER_PORT:-8888}:${CONFIG_SERVER_PORT:-8888}"
    healthcheck:
      test: "curl --fail --silent localhost:${CONFIG_SERVER_PORT:-8888}/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    networks:
      - bank-net

  eureka-server:
    build:
      context: ./eureka-server
    image: eureka-server:1.0.0
    container_name: eureka-server
    hostname: eureka-server
    environment:
      CONFIG_SERVER_HOST: ${CONFIG_SERVER_HOST:-spring-cloud-config-server}
      CONFIG_SERVER_PORT: ${CONFIG_SERVER_PORT:-8888}
    expose:
      - "8761"
    ports:
      - "8761:8761"
    depends_on:
      spring-cloud-config-server:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8761/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    networks:
      - bank-net

  api-gateway:
    build:
      context: ./api-gateway
    image: api_gateway:1.0.0
    container_name: api-gateway
    hostname: api-gateway
    environment:
      <<: *common-env
    expose:
      - "8080"
    ports:
      - "8090:8080"
    depends_on:
      spring-cloud-config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8761/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    networks:
      - bank-net

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"       # порт для AMQP (протокол RabbitMQ)
      - "15672:15672"     # порт для веб-интерфейса управления
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - bank-net

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.3
    container_name: keycloak
    hostname: keycloak
    command:
      - start
      - --import-realm
    ports:
      - "8082:8080"
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: ${KC_DB_USERNAME:-keycloak}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD:-keycloak}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: 'false'
      KC_HOSTNAME_STRICT_HTTPS: 'false'
      KC_HTTP_ENABLED: 'true'
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    volumes:
      - ./keycloak/:/opt/keycloak/data/import/
    depends_on:
      keycloak-db:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:9000/health/live']
      interval: 5s
      timeout: 5s
      retries: 30
    networks:
      - bank-net

  keycloak-db:
    image: postgres:17.2
    container_name: keycloak-db
    restart: "no"
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${KC_DB_USERNAME:-keycloak}
      POSTGRES_PASSWORD: ${KC_DB_PASSWORD:-keycloak}
      POSTGRES_DB: keycloak
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
    networks:
      - bank-net

networks:
  bank-net:
    driver: bridge

volumes:
  keycloak_db_data:
    name: keycloak_db_data