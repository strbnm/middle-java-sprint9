import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp:4.2.1'  // Для работы Spring Cloud Bus c RabbitMQ
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test:3.7.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'
    testImplementation 'io.rest-assured:spring-web-test-client:5.5.2'
}

springBoot {
    buildInfo()  // исполнение задачи по добавлению информации о сборке
}

bootJar {
    launchScript()
    // добавление атрибутов к манифесту
    manifest {
        attributes(
                'Implementation-Title': 'Сервис генерации курсов валют (Exchange Generator)',
                'Build-Timestamp': System.currentTimeMillis(),
                'Built-By': project.hasProperty('builtBy') ? project.property('builtBy') : 'default-builder'
        )
    }
    // имя и версия создаваемого архива
    archiveBaseName = 'exchange-generator'
    archiveVersion = project.version
}


tasks.register('buildClient', GenerateTask) {
    generatorName.set("java")
    inputSpec.set("$rootDir/openapi/exchange-openapi.yml")
    outputDir.set("$projectDir/build/generated")
    modelPackage.set("ru.strbnm.exchange_generator.client.domain")
    invokerPackage.set("ru.strbnm.exchange_generator.client")
    apiPackage.set("ru.strbnm.exchange_generator.client.api")
    configOptions.set([
            hideGenerationTimestamp: "true",
            library                : "webclient",
            useJakartaEe           : "true",
            useTags                : "true",
            openApiNullable        : "false",
            serializableModel      : "true",
            additionalModelTypeAnnotations: "@lombok.RequiredArgsConstructor",
    ])
    typeMappings.set(Double: "java.math.BigDecimal")
}

sourceSets.main.java.srcDir "$projectDir/build/generated/src/main/java"

tasks.named('compileJava') {
    dependsOn(tasks.buildClient)
}
tasks.named("test") {
    dependsOn ':exchange-service:publish'
}

afterEvaluate {
    tasks.matching { it.name.startsWith("contract") || it.name.contains("Contract") }.configureEach {
        enabled = false
    }
}


