pipeline {
    agent any

    environment {
        DOCKER_REGISTRY                     = credentials('DOCKER_REGISTRY')
        ACCOUNTS_SERVICE_DB_PASSWORD        = credentials('ACCOUNTS_SERVICE_DB_PASSWORD')
        CASH_SERVICE_DB_PASSWORD            = credentials('CASH_SERVICE_DB_PASSWORD')
        TRANSFER_SERVICE_DB_PASSWORD        = credentials('TRANSFER_SERVICE_DB_PASSWORD')
        EXCHANGE_SERVICE_DB_PASSWORD        = credentials('EXCHANGE_SERVICE_DB_PASSWORD')
        NOTIFICATIONS_SERVICE_DB_PASSWORD   = credentials('NOTIFICATIONS_SERVICE_DB_PASSWORD')
        RABBITMQ_DEFAULT_PASS               = credentials('RABBITMQ_DEFAULT_PASS')
        ACCOUNTS_CLIENT_SECRET              = credentials('ACCOUNTS_CLIENT_SECRET')
        CASH_CLIENT_SECRET                  = credentials('CASH_CLIENT_SECRET')
        EXCHANGE_CLIENT_SECRET              = credentials('EXCHANGE_CLIENT_SECRET')
        NOTIFICATION_CLIENT_SECRET          = credentials('NOTIFICATION_CLIENT_SECRET')
        TRANSFER_CLIENT_SECRET              = credentials('TRANSFER_CLIENT_SECRET')
        BLOCKER_CLIENT_SECRET               = credentials('BLOCKER_CLIENT_SECRET')
        NEXUS_REPOSITORY_RELEASES_URL       = 'http://nexus:8081/repository/maven-releases/'

        GITHUB_USERNAME         = credentials('GITHUB_USERNAME')

        DB_NAME                 = 'app_db'
        ACCOUNTS_DB_USER        = 'accounts_user'
        CASH_DB_USER            = 'cash_user'
        TRANSFER_DB_USER        = 'transfer_user'
        EXCHANGE_DB_USER        = 'exchange_user'
        NOTIFICATIONS_DB_USER   = 'notifications_user'
        IMAGE_TAG               = "${env.BUILD_NUMBER}"

        NEXUS_PASSWORD          = credentials('NEXUS_JENKINS_PASSWORD')
        NEXUS_USER              = 'jenkins'

        STUBRUNNER_PASSWORD     = credentials('NEXUS_JENKINS_PASSWORD')
        STUBRUNNER_USERNAME     = 'jenkins'
    }

    stages {
        stage('Exchange Service') {
            steps {
                dir('exchange-service') {
                    sh 'gradlew clean build -PnexusUsername=jenkins -PnexusPassword=$NEXUS_PASSWORD'
                }
            }
        }
        stage('Notifications Service') {
            steps {
                dir('notifications-service') {
                    sh './gradlew clean build -PnexusUsername=jenkins -PnexusPassword=$NEXUS_PASSWORD'
                }
            }
        }
        stage('Blocker Service') {
            steps {
                dir('blocker-service') {
                    sh './gradlew clean build -PnexusUsername=jenkins -PnexusPassword=$NEXUS_PASSWORD'
                }
            }
        }
        stage('Exchange Generator') {
            steps {
                dir('exchange-generator') {
                    sh './gradlew clean build -PnexusUsername=jenkins -PnexusPassword=$NEXUS_PASSWORD'
                }
            }
        }
        stage('Accounts Service') {
            steps {
                dir('accounts-service') {
                    sh './gradlew clean build -PnexusUsername=jenkins -PnexusPassword=$NEXUS_PASSWORD'
                }
            }
        }
        stage('Cash Service') {
            steps {
                dir('cash-service') {
                    sh './gradlew clean build -PnexusUsername=jenkins -PnexusPassword=$NEXUS_PASSWORD'
                }
            }
        }
        stage('Transfer Service') {
            steps {
                dir('transfer-service') {
                    sh './gradlew clean build -PnexusUsername=jenkins -PnexusPassword=$NEXUS_PASSWORD'
                }
            }
        }
        stage('Front UI') {
            steps {
                dir('front-ui') {
                    sh './gradlew clean build -PnexusUsername=jenkins -PnexusPassword=$NEXUS_PASSWORD'
                }
            }
        }

    }
}
