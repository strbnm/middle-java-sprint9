import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation project(':api')
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.kafka:spring-kafka:3.3.6'
    implementation 'io.projectreactor.kafka:reactor-kafka:1.3.23'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework:spring-jdbc:6.2.3'
    implementation 'com.zaxxer:HikariCP:6.2.1'
    implementation 'org.liquibase:liquibase-core:4.31.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'io.r2dbc:r2dbc-proxy'
    implementation 'org.postgresql:r2dbc-postgresql:1.0.7.RELEASE'
    testRuntimeOnly 'com.h2database:h2'
    implementation 'org.postgresql:postgresql'
    testRuntimeOnly 'io.r2dbc:r2dbc-h2:1.0.0.RELEASE'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test:3.7.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier'
    testImplementation 'io.rest-assured:spring-web-test-client:5.5.2'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
}

springBoot {
    buildInfo()  // исполнение задачи по добавлению информации о сборке
}

bootJar {
    launchScript()
    // добавление атрибутов к манифесту
    manifest {
        attributes(
                'Implementation-Title': 'Сервис обналичивания денег (Cash)',
                'Build-Timestamp': System.currentTimeMillis(),
                'Built-By': project.hasProperty('builtBy') ? project.property('builtBy') : 'default-builder'
        )
    }
    // имя и версия создаваемого архива
    archiveBaseName = 'cash-service'
    archiveVersion = project.version

}

openApiGenerate {
    generatorName.set("spring")
    inputSpec.set("$rootDir/openapi/cash-openapi.yml")
    outputDir.set("$projectDir/build/generated")
    modelPackage.set("ru.strbnm.cash_service.domain")
    invokerPackage.set("ru.strbnm.cash_service")
    apiPackage.set("ru.strbnm.cash_service.api")
    configOptions.set([
            hideGenerationTimestamp: "true",
            requestMappingMode: "controller",
            interfaceOnly: "true",
            library: "spring-boot",
            reactive: "true",
            useSpringBoot3: "true",
            useJakartaEe: "true",
            useTags: "true",
            dateLibrary: "java8",
            openApiNullable: "false",
            serializableModel: "true",
            returnSuccessCode: "true",
            bigDecimalAsString: "true",
            additionalModelTypeAnnotations: "@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown=true)",
    ])
    typeMappings.set(Double: "java.math.BigDecimal")
}

sourceSets.main.java.srcDir "$projectDir/build/generated/src/main/java"

tasks.register('buildBlockerClient', GenerateTask) {
    generatorName.set("java")
    inputSpec.set("$rootDir/openapi/blocker-openapi.yml")
    outputDir.set("$projectDir/build/generated")
    modelPackage.set("ru.strbnm.cash_service.client.blocker.domain")
    invokerPackage.set("ru.strbnm.cash_service.client.blocker")
    apiPackage.set("ru.strbnm.cash_service.client.blocker.api")
    configOptions.set([
            hideGenerationTimestamp: "true",
            library                : "webclient",
            useJakartaEe           : "true",
            useTags                : "true",
            openApiNullable        : "false",
            serializableModel      : "true",
    ])
    typeMappings.set(Double: "java.math.BigDecimal")
}

tasks.named('compileJava') {
    dependsOn(tasks.buildBlockerClient)
}

tasks.register('buildAccountsClient', GenerateTask) {
    generatorName.set("java")
    inputSpec.set("$rootDir/openapi/accounts-openapi.yml")
    outputDir.set("$projectDir/build/generated")
    modelPackage.set("ru.strbnm.cash_service.client.accounts.domain")
    invokerPackage.set("ru.strbnm.cash_service.client.accounts")
    apiPackage.set("ru.strbnm.cash_service.client.accounts.api")
    configOptions.set([
            hideGenerationTimestamp: "true",
            library                : "webclient",
            useJakartaEe           : "true",
            useTags                : "true",
            openApiNullable        : "false",
            serializableModel      : "true",
    ])
    typeMappings.set(Double: "java.math.BigDecimal")
}

tasks.named('compileJava') {
    dependsOn(tasks.buildAccountsClient)
}

contracts {
    testMode = "WebTestClient"
    baseClassForTests = 'ru.strbnm.cash_service.BaseContractTest'
    generatedTestJavaSourcesDir = project.file('src/contractTest/java/ru/strbnm/cash_service/generatedContract')
}

//Зависимости задач Gradle
tasks.named('compileJava') {
    dependsOn(tasks.openApiGenerate)
}
tasks.named('build') {
    dependsOn 'verifierStubsJar'
    finalizedBy 'publishToMavenLocal'
}
tasks.named("test") {
    dependsOn ':accounts-service:publish'
    dependsOn ':blocker-service:publish'
}